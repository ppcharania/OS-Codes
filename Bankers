// Online C compiler to run C program online
#include <stdio.h>


int main() {
    int n = 5; // Number of processes
    int m = 3; // Number of resources
    int alloc[5][3] = {{0, 1, 0}, {2, 0, 0}, {3, 0, 2}, {2, 1, 1}, {0, 0, 2}};
    int max[5][3] = {{7, 5, 3}, {3, 2, 2}, {9, 0, 2}, {2, 2, 2}, {4, 3, 3}};
    int avail[3] = {3, 3, 2}; // Available Resources

    int f[n], ans[n], ind = 0;
    for (int k = 0; k < n; k++) {
        f[k] = 0;
    }

    int need[n][m];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            need[i][j] = max[i][j] - alloc[i][j];
        }
    }

    int flag = 1;
    for (int k = 0; k < 5; k++) {
        for (int i = 0; i < n; i++) {
            if (f[i] == 0) {
                int safe = 1;
                for (int j = 0; j < m; j++) {
                    if (need[i][j] > avail[j]) {
                        safe = 0;
                        break;
                    }
                }
                if (safe) {
                    ans[ind++] = i;
                    for (int y = 0; y < m; y++) {
                        avail[y] += alloc[i][y];
                    }
                    f[i] = 1;
                }
            }
        }
    }

    for (int i = 0; i < n; i++) {
        if (f[i] == 0) {
            flag = 0;
            printf("The system is not in a safe state.\n");
            break;
        }
    }

    if (flag) {
        printf("Safe sequence:");
        for (int i = 0; i < n; i++) {
            printf(" P%d", ans[i]);
            if (i != n - 1) {
                printf(" ->");
            }
        }
        printf("\n");
    }

    return 0;
}
